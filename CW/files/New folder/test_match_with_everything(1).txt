import random

total = 0
wickets = 0
balls = 0

bowler_score = 0  # score cunting variable for bowler
batter_score = 0  # score cunting variable for batsman

x = 62 % 6
print(x)

while balls < 120:
    # print('total-', total, 'wickets -', wickets, 'balls-', balls)
    if wickets == 10:
        break
    else:
        # get random scores for boer and batsman
        bowler_score = random.randint(0, 6)
        batter_score = random.randint(0, 6)

        if bowler_score == batter_score:
            # out - add wicket to wickets
            wickets += 1
        else:
            # add batter score to total
            total += batter_score
    balls += 1
print('total-', total, 'wickets -', wickets, 'overs -', int(balls/6), '.', balls%6, 'balls', balls)


















=======================================================================================================
import random

total = 0
wickets = 0
balls = 1
TOTAL_WICKETS = 2

batsman_onstrike = [['name', 0], True]
batsman_offstrike = [['name', 0], False]

yet_to_bat = [['Sanath', 0], ['Russel', 0], ['Mahela', 0]]
dismissed_batsmen = []


bowler_score = 0  # score counting variable for bowler
batter_score = 0  # score counting variable for batsman

# opening batsmen coming to the field
batsman_onstrike[0] = yet_to_bat.pop(0)
batsman_offstrike[0] = yet_to_bat.pop(0)


while balls < 60:
    if wickets == TOTAL_WICKETS:
        break
    else:
        # get random scores for bowler and batsman
        bowler_score = random.randint(1, 6)
        batter_score = random.randint(0, 6)

        if bowler_score == batter_score:
            dismissed_batsmen.append(batsman_onstrike[0])
            # batsman_onstrike[0] = [['name' , 0] , True]
            if len(yet_to_bat) > 0:
                batsman_onstrike[0] = []
                batsman_onstrike[0] = yet_to_bat.pop(0)
                # out - add wicket to wickets
            wickets += 1
        else:
            current_batsman_onstrike_score = 0
            # adding batter_score to current_batsman
            current_batsman_onstrike_score = batsman_onstrike[0][1]
            batsman_onstrike[0][1] = current_batsman_onstrike_score + batter_score
            if batter_score == 1 or batter_score == 3:
                current_batsman = batsman_onstrike[0]
                # swapping onstrike batsmen
                batsman_onstrike[0] = batsman_offstrike[0]
                batsman_offstrike[0] = current_batsman
            else:
                pass  # when batter_score is not swapping

            # add batter score to total
            total += batter_score
    balls += 1

print(' total-', total, ' wickets -', wickets, ' overs -',
      int(balls/6), '.', balls % 6, ' balls', balls)
last_dismissal = batsman_onstrike[0]
print('Last dismissal', last_dismissal)
batsman_onstrike[0] = []
print(yet_to_bat, dismissed_batsmen, batsman_onstrike, batsman_offstrike)




=======================================================================================================



import random

total = 0
wickets = 0
balls = 1
TOTAL_WICKETS = 2
score_card = []

batsman_onstrike = [['name', 0, 0], True]
batsman_offstrike = [['name', 0, 0], False]

bowler_onstrike = []


# batsman_name , runs , balls_faced , method of dismissal , bowler
yet_to_bat = [['Sanath', 0, 0, '', ''], [
    'Russel', 0, 0, '', ''], ['Mahela', 0, 0, '', '']]
dismissed_batsmen = []


# bowlers_name , balls , runs , wickets
yet_to_bowl = [['Vass', 0, 0, 0], ['Murali', 0, 0, 0], ['Wanindu', 0, 0, 0]]

# method of dismissal
method_of_dismissal = ['Bowled', 'Caught', 'LBW']


bowler_score = 0  # score counting variable for bowler
batter_score = 0  # score counting variable for batsman


# opening batsmen coming to the field
batsman_onstrike[0] = yet_to_bat.pop(0)
batsman_offstrike[0] = yet_to_bat.pop(0)

# opening bowler
bowler_onstrike = yet_to_bowl.pop(0)


while balls < 60:
    if wickets == TOTAL_WICKETS:
        break
    else:
        if ((balls-1) > 0 and (balls-1) % 6 == 0) and (len(yet_to_bowl)) > 0:
            yet_to_bowl.append(bowler_onstrike)
            # bowler_onstrike[0] = []
            bowler_onstrike = yet_to_bowl.pop(0)

        # get random scores for bowler and batsman
        bowler_score = random.randint(1, 6)
        batter_score = random.randint(0, 6)

        if bowler_score == batter_score:
            # adding wickets to bowler
            current_bowler_onstrike_wickets = 0
            current_bowler_onstrike_wickets = bowler_onstrike[3]
            bowler_onstrike[3] = current_bowler_onstrike_wickets + 1
            # adding balls to batsman
            current_batsman_onstrike_balls = batsman_onstrike[0][2]
            batsman_onstrike[0][2] = current_batsman_onstrike_balls + 1
            dismissed_batsmen.append(batsman_onstrike[0])
            # adding method of dismissal to batsman
            current_batsman_method_of_dismissal = random.choices(
                method_of_dismissal)
            batsman_onstrike[0][3] = current_batsman_method_of_dismissal[0]

            # adding dismissed bowler name to batsman
            current_batsman_bowler_dismissed = batsman_onstrike[0][4]
            batsman_onstrike[0][4] = current_batsman_bowler_dismissed + \
                str(bowler_onstrike[0])

            if len(yet_to_bat) > 0:
                batsman_onstrike[0] = []
                batsman_onstrike[0] = yet_to_bat.pop(0)
                # out - add wicket to wickets
            wickets += 1

            # fall of wickets
            print('FOW', total, ' - ', wickets)

        else:
            # adding batter_score to current_batsman
            current_batsman_onstrike_score = 0
            current_batsman_onstrike_score = batsman_onstrike[0][1]
            batsman_onstrike[0][1] = current_batsman_onstrike_score + batter_score
            # adding balls to current_batsman
            current_batsman_onstrike_balls = batsman_onstrike[0][2]
            batsman_onstrike[0][2] = current_batsman_onstrike_balls + 1

            # adding batter_score to current_bowler
            current_bowler_onstrike_runs = 0
            current_bowler_onstrike_runs = bowler_onstrike[2]
            bowler_onstrike[2] = current_bowler_onstrike_runs + batter_score

            if batter_score == 1 or batter_score == 3:
                current_batsman = batsman_onstrike[0]
                # swapping onstrike batsmen
                batsman_onstrike[0] = batsman_offstrike[0]
                batsman_offstrike[0] = current_batsman
            else:
                pass  # when batter_score is not swapping

            # add batter score to total
            total += batter_score

    # adding balls to bowler
    current_bowler_onstrike_balls = 0
    current_bowler_onstrike_balls = bowler_onstrike[1]
    bowler_onstrike[1] = current_bowler_onstrike_balls + 1
    balls += 1


score_card.append(dismissed_batsmen)
score_card.append([batsman_offstrike[0], '*'])

print(' total-', total, ' wickets -', wickets, ' overs -',
      int(balls/6), '.', (balls-1) % 6, ' balls', (balls-1))
last_dismissal = batsman_onstrike[0]
print('Last dismissal', last_dismissal)
batsman_onstrike[0] = []
print(score_card)

print(yet_to_bowl, bowler_onstrike)






=======================================================================================================










import random
import pandas as pd
from operator import itemgetter


total = 0
wickets = 0
balls = 1
TOTAL_WICKETS = 10
score_card = []


batsman_onstrike = [['name', 0, 0], True]
batsman_offstrike = [['name', 0, 0], False]

bowler_onstrike = []


# batsman_name , runs , balls_faced , method of dismissal , bowler



#importing batting team
batting_url = team_to_bat[1]
batting_team = pd.read_excel(batting_url)
#converting excel to python list
yet_to_bat = batting_team.values.tolist()        


#importing bowling team
bowling_url = team_to_bowl[1]
bowling_team = pd.read_excel(bowling_url)
#converting excel to python list
bowling_team_list = bowling_team.values.tolist()  


yet_to_bowl = []

for i in reversed(range(len(bowling_team_list))):
    if len(yet_to_bowl) < 5 :
        yet_to_bowl.append([bowling_team_list[i][0], 0, 0, 0])



dismissed_batsmen = []
batsman_list = []


# bowlers_name , balls , runs , wickets
# yet_to_bowl = [['Vass', 0, 0, 0], ['Murali', 0, 0, 0],
#                ['Wanindu', 0, 0, 0], ['Chameera', 0, 0, 0], ['Chamika', 0, 0, 0]]

# method of dismissal
method_of_dismissal = ['Bowled', 'Caught', 'LBW']


bowler_score = 0  # score counting variable for bowler
batter_score = 0  # score counting variable for batsman


# opening batsmen coming to the field
batsman_onstrike[0] = yet_to_bat.pop(0)
batsman_offstrike[0] = yet_to_bat.pop(0)


# opening bowler
bowler_onstrike = yet_to_bowl.pop(0)


while balls < 61:
    if wickets == TOTAL_WICKETS:
        break
    else:
        if ((balls-1) > 0 and (balls-1) % 6 == 0) and (len(yet_to_bowl)) > 0:
            yet_to_bowl.append(bowler_onstrike)
            # bowler_onstrike[0] = []
            bowler_onstrike = yet_to_bowl.pop(0)

        # get random scores for bowler and batsman
        bowler_score = random.randint(1, 6)
        batter_score = random.randint(0, 6)

        if bowler_score == batter_score:
            # adding wickets to bowler
            current_bowler_onstrike_wickets = 0
            current_bowler_onstrike_wickets = bowler_onstrike[3]
            bowler_onstrike[3] = current_bowler_onstrike_wickets + 1
            # adding balls to batsman
            current_batsman_onstrike_balls = batsman_onstrike[0][2]
            batsman_onstrike[0][2] = current_batsman_onstrike_balls + 1

            # moving the dismissed_batsmen to dismissed_batsmen array
            dismissed_batsmen.append(batsman_onstrike[0])


            # adding method of dismissal to batsman
            current_batsman_method_of_dismissal = random.choices(
                method_of_dismissal)
            batsman_onstrike[0][3] = current_batsman_method_of_dismissal[0]

            # adding dismissed bowler name to batsman
            current_batsman_bowler_dismissed = batsman_onstrike[0][4]
            batsman_onstrike[0][4] = current_batsman_bowler_dismissed + \
                str(bowler_onstrike[0])

            # fall of wickets
            print('FOW', total, ' --> ', wickets+1, ' on over -', int(balls/6), '.', (balls) % 6 , batsman_onstrike[0][0])

            #bring new batsman to the crease (batsman_onstrike)
            if len(yet_to_bat) > 0:
                batsman_onstrike[0] = []
                batsman_onstrike[0] = yet_to_bat.pop(0)


            # out - add wicket to wickets
            wickets += 1



        else:
            # adding batter_score to current_batsman
            current_batsman_onstrike_score = 0
            current_batsman_onstrike_score = batsman_onstrike[0][1]
            batsman_onstrike[0][1] = current_batsman_onstrike_score + batter_score

            # adding balls to current_batsman
            current_batsman_onstrike_balls = batsman_onstrike[0][2]
            batsman_onstrike[0][2] = current_batsman_onstrike_balls + 1

            # adding batter_score to current_bowler
            current_bowler_onstrike_runs = 0
            current_bowler_onstrike_runs = bowler_onstrike[2]
            bowler_onstrike[2] = current_bowler_onstrike_runs + batter_score

            # swapping onstrike batsman when strike rotates
            if batter_score == 1 or batter_score == 3:
                current_batsman = batsman_onstrike[0]
                # swapping onstrike batsman
                batsman_onstrike[0] = batsman_offstrike[0]
                batsman_offstrike[0] = current_batsman
            else:
                pass  # when batter_score is not swapping

            # add batter score to total
            total += batter_score

    # adding balls to bowler
    current_bowler_onstrike_balls = 0
    current_bowler_onstrike_balls = bowler_onstrike[1]
    bowler_onstrike[1] = current_bowler_onstrike_balls + 1
    balls += 1

# last dismissed batsman
last_dismissal = dismissed_batsmen[-1]
print('Last dismissal', last_dismissal)

#add dismissed_batsmen to batsman_list
batsman_list = dismissed_batsmen

#add each batsman in yet_to_bat to batsman_list array for displaying purposes
if len(yet_to_bat) > 0 :
    for i in range(len(yet_to_bat)):
        batsman_list.append(yet_to_bat[i])

#add on and off strike batsmen to batsman_list
if wickets != TOTAL_WICKETS:
    batsman_onstrike[0][3] = '**'
    batsman_list.append(batsman_onstrike[0])

batsman_offstrike[0][3] = '*'
batsman_list.append(batsman_offstrike[0])

#add batsman_list to score_card
score_card = batsman_list


# Total
print(' Total-', total, ' wickets -', wickets, ' overs -', int(balls/6), '.', (balls-1) % 6, ' balls', (balls-1))

# sort score_card to the original batting order
sorted_list = sorted(score_card, key=itemgetter(5))

# Print score_card in a data frame
df_score_card = pd.DataFrame(sorted_list)
print(df_score_card)


# print(yet_to_bowl, bowler_onstrike)
                                                        # df_yet_to_bowl = pd.DataFrame(yet_to_bowl)


#add bowlers to bowler_list
bowler_list = yet_to_bowl
bowler_list.append(bowler_onstrike)

df_bowler_list = pd.DataFrame(bowler_list)
print(df_bowler_list)


#this is the way to write data to excel file
# Creating Excel Writer Object from Pandas  

# writer = pd.ExcelWriter('test.xlsx',engine='xlsxwriter')   
# workbook=writer.book
# worksheet=workbook.add_worksheet('Validation')
# writer.sheets['Validation'] = worksheet
# df_score_card.to_excel(writer,sheet_name='Validation',startrow=0 , startcol=0)   
# df_bowler_list.to_excel(writer,sheet_name='Validation',startrow=19, startcol=0)  

# writer.save()
# writer.close()
        

